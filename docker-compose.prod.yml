version: "3.3"
services:

  #proxy:
  #  image: traefik:v2.2
  #  networks:
  #    - ${TRAEFIK_PUBLIC_NETWORK?Variable not set}
  #    - default
  #  volumes:
  #    - /var/run/docker.sock:/var/run/docker.sock
  #  command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
  #    - --providers.docker
      # Add a constraint to only use services with the label for this stack
      # from the env var TRAEFIK_TAG
  #    - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?Variable not set}`)
      # Do not expose all Docker services, only the ones explicitly exposed
  #    - --providers.docker.exposedbydefault=false
      # Enable Docker Swarm mode
  #    - --providers.docker.swarmmode
      # Enable the access log, with HTTP requests
  #    - --accesslog
      # Enable the Traefik log, for configurations and errors
  #    - --log
      # Enable the Dashboard and API
  #    - --api
  db:
    image: postgres:12
    volumes:
      #- ./scripts:/scripts
      - app-db-data:/var/lib/postgresql/data/pgdata
      #- ./backups_db:/backups
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:5050"
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  
  backend:
    env_file:
      - .env
    ports:
      - "4000:4000"
    depends_on:
      - db
    build:
      context: .
      dockerfile: ./compose/backend/Dockerfile
  
volumes:
  app-db-data:
  pgadmin-data:

